#/usr/lib/python
#-*- coding:utf-8 -*-
from optparse import OptionParser

msg_usage = 'usage: %prog [-T][-q][-d] files'
descr = '''FB, GATK and SB which are abbrevations of the callers: freebayes,
GATK,samtools and bcftools. The first argument must be one of them, beacuse
the vcf files generated by different tools are not same.So you should tell
the scripts which tool you have used to call snp.The second arguments is
qual, and third is depth. Then the resduals are the names of vcf files.
'''
optparser = OptionParser(usage = msg_usage, description = descr)
optparser.add_option('-T', '--tool', dest = 'toolname',
                     help = 'input the name of tool you used to call snp' )
optparser.add_option('-q', '--qual', dest = 'quality',
                     help = 'the quality cutoff')
optparser.add_option('-d', '--depth', dest = 'depth',
                     help = 'the depth cutoff')
options, args = optparser.parse_args()

def FBfilter(qual, depth, vcfnamelist, type = 'snp'):
    '''This function is designed for filtering vcf files generwted by freebayes.'''
    for fn in vcfnamelist:
        filteredname = '.'.join(fn.split('.')[0:-1]) + '.filtered.vcf'
        f0 = open(fn, 'r')
        f1 = open(filteredname, 'w')
        for i in f0:
            if i.startswith('#'):
                f1.write(i)
            else:
                j = i.split()
                if (float(j[5]) > qual
                    and j[7].split(';')[-2].split('=')[-1] == type
                    and int(j[9].split(':')[1]) > depth) :
                    f1.write(i)
        f0.close()
        f1.close()

def GATKfilter(qual, depth, vcfnamelist):
    '''This func is designed for filtering vcf files generwted by GATK.'''
    for fn in vcfnamelist:
        filteredname = '.'.join(fn.split('.')[0:-1]) + '.filtered.vcf'
        f0 = open(fn, 'r')
        f1 = open(filteredname, 'w')
        for i in f0:
            if i.startswith('#'):
                f1.write(i)
            else:
                j = i.split()
                ref = j[3]
                alt = j[4]
                info = j[8].split(':')
                if (float(j[5]) > qual and len(ref) == 1 and len(alt) == 1
                    and len(info) == 5 and int(j[9].split(':')[2]) > depth):
                    f1.write(i)
        f0.close()
        f1.close()

def SBfilter(qual, depth, vcfnamelist):
    '''This function is designed for filtering vcf files generated by \
samtools and bcftools.
    '''
    for fn in vcfnamelist:
        filteredname = '.'.join(fn.split('.')[0:-1]) + '.filtered.vcf'
        f0 = open(fn, 'r')
        f1 = open(filteredname, 'w')
        for i in f0:
            if i.startswith('#'):
                f1.write(i)
            else:
                j = i.split()
                ref = j[3]
                alt = j[4]
                info = j[8].split(':')
                if (float(j[5]) > qual and len(ref) ==1 and len(alt) == 1
                    and int(j[9].split(':')[2]) > depth):
                    f1.write(i)
        f0.close()
        f1.close()

if __name__ == '__main__':
    import sys
    q = options.quality
    d = options.depth
    T = options.toolname
    if T == 'FB':
        FBfilter(q, d, args)
    elif T == 'GATK':
        GATKfilter(q, d, args)
    elif T == 'SB':
        SBfilter(q, d, args )
    else:
        print 'please choose the tool when you called snp used.'
